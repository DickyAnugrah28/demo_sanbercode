{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 0,
    "pending": 0,
    "failures": 3,
    "start": "2024-02-11T18:02:09.747Z",
    "end": "2024-02-11T18:02:14.420Z",
    "duration": 4673,
    "testsRegistered": 3,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "f0195c7d-bc73-4bb8-86f9-0d657f2881ab",
      "title": "",
      "fullFile": "C:\\Users\\dicky\\Sanbercode\\API-Automation\\module\\test\\suites\\booking.suites.js",
      "file": "\\module\\test\\suites\\booking.suites.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ddc74280-382a-4aa0-bdde-a938428a4722",
          "title": "E2E - Booking",
          "fullFile": "C:\\Users\\dicky\\Sanbercode\\API-Automation\\module\\test\\suites\\booking.suites.js",
          "file": "\\module\\test\\suites\\booking.suites.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Success Create Booking",
              "fullTitle": "E2E - Booking Success Create Booking",
              "timedOut": false,
              "duration": 1610,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const response = await createBooking()\nexpect((await response).status).to.equal(200)\nbookingId = (await response).body.bookingId",
              "err": {
                "message": "AssertionError: expected 418 to equal 200",
                "estack": "AssertionError: expected 418 to equal 200\n    at Context.<anonymous> (file:///C:/Users/dicky/Sanbercode/API-Automation/module/test/suites/booking.suites.js:15:44)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- 418\n+ 200\n"
              },
              "uuid": "fbf1627e-715e-4697-a2cc-d4a785d75d56",
              "parentUUID": "ddc74280-382a-4aa0-bdde-a938428a4722",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success Get Booking",
              "fullTitle": "E2E - Booking Success Get Booking",
              "timedOut": false,
              "duration": 1046,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const response = await getBooking.id(bookingId)\n\nexpect((await response).status).to.equal(200)\nbookingId = (await response).body.bookingId",
              "err": {
                "message": "AssertionError: expected 404 to equal 200",
                "estack": "AssertionError: expected 404 to equal 200\n    at Context.<anonymous> (file:///C:/Users/dicky/Sanbercode/API-Automation/module/test/suites/booking.suites.js:22:44)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- 404\n+ 200\n"
              },
              "uuid": "ade67d7b-7485-4962-9975-605fff111a47",
              "parentUUID": "ddc74280-382a-4aa0-bdde-a938428a4722",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success Update Booking",
              "fullTitle": "E2E - Booking Success Update Booking",
              "timedOut": true,
              "duration": 2008,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "token = await createToken()\nconst response = await updateBooking(bookingId,token)\n\nexpect((await response).status).to.equal(200)",
              "err": {
                "message": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (C:\\Users\\dicky\\Sanbercode\\API-Automation\\module\\test\\suites\\booking.suites.js)",
                "estack": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (C:\\Users\\dicky\\Sanbercode\\API-Automation\\module\\test\\suites\\booking.suites.js)\n    at listOnTimeout (node:internal/timers:573:17)\n    at process.processTimers (node:internal/timers:514:7)",
                "diff": null
              },
              "uuid": "4aab5b25-85c7-4c05-a760-16f44cd665b3",
              "parentUUID": "ddc74280-382a-4aa0-bdde-a938428a4722",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "fbf1627e-715e-4697-a2cc-d4a785d75d56",
            "ade67d7b-7485-4962-9975-605fff111a47",
            "4aab5b25-85c7-4c05-a760-16f44cd665b3"
          ],
          "pending": [],
          "skipped": [],
          "duration": 4664,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}